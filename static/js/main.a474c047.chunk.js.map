{"version":3,"sources":["lotto/LottoRandomHeader.js","lotto/plate/NumberPlateBoxComponent.js","lotto/plate/NumberPlateComponent.js","lotto/LottoRandomSideMenu.js","lotto/numberBox/LottoBoxComponent.js","lotto/LottoRandomContents.js","lotto/LottoRandomTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["LottoRandomHeader","className","Component","NumberPlateBoxComponent","handleChange","e","checked","target","props","number","type","this","selected","onChange","NumberPlateComponent","allHandleChange","allCheck","map","select","index","onClick","handleButtonOnClick","LottoRandomSideMenu","LottoBoxComponent","state","numbers","b_number","lottoNumber","slice","n","LottoRandomContents","lottoNumbers","i","LottoRandomTemplate","setState","console","log","Modal","selectBundle","flag","lotto","selectLotto","push","selectedNumberCount","forEach","s","alert","length","temp","sort","a","b","Math","floor","random","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a474c047.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\n\r\nclass LottoRandomHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-header\">\r\n                <b>Lotto Random Number Generator</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomHeader;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\n\r\nclass NumberPlateBoxComponent extends Component {\r\n\r\n    handleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.handleChange(checked, this.props.number)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"number-plate-box-contents\">\r\n              <div className=\"number-plate-box\">\r\n                  <input type=\"checkbox\" checked={this.props.selected} onChange={this.handleChange} />\r\n                  <span>{this.props.number}</span>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberPlateBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\nimport NumberPlateBoxComponent from \"./NumberPlateBoxComponent\";\r\n\r\nclass NumberPlateComponent extends Component {\r\n\r\n    allHandleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.allHandleChange(checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"number-plate-box\">\r\n                    <input type=\"checkbox\" checked={this.props.allCheck} onChange={this.allHandleChange} />\r\n                    <span>ALL</span>\r\n                </div>\r\n                <div className=\"number-plate-contents\">\r\n                    {this.props.selected.map((select, index)=>\r\n                            <NumberPlateBoxComponent\r\n                                key={index}\r\n                                number={index+1}\r\n                                selected={select}\r\n                                handleChange={this.props.handleChange}\r\n                            />\r\n                    )}\r\n                </div>\r\n                <button className=\"number-button\" onClick={this.props.handleButtonOnClick}>Generate</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberPlateComponent;","import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\nimport NumberPlateComponent from \"./plate/NumberPlateComponent\";\r\n\r\nclass LottoRandomSideMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-sidemenu\">\r\n                <NumberPlateComponent\r\n                    allCheck={this.props.allCheck}\r\n                    selected={this.props.selected}\r\n                    allHandleChange={this.props.allHandleChange}\r\n                    handleChange={this.props.handleChange}\r\n                    handleButtonOnClick={this.props.handleButtonOnClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomSideMenu;","import React, {Component} from \"react\";\r\nimport \"./LottoBoxStyle.css\"\r\n\r\nclass LottoBoxComponent extends Component {\r\n    state = {\r\n        numbers : [1, 2, 3, 4, 5, 6],\r\n        b_number : 7\r\n    }\r\n    render() {\r\n        const numbers = this.props.lottoNumber.slice(0, 6)\r\n        const b_number = this.props.lottoNumber[6]\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"lotto-box\">\r\n                    {numbers.map(n=>\r\n                        <div\r\n                            className=\"lotto-box-number\"\r\n                            key={n}>{n}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"lotto-box-plus\">+</div>\r\n                    <div className=\"lotto-box-number\">{b_number}</div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\nimport LottoBoxComponent from \"./numberBox/LottoBoxComponent\";\r\n\r\nclass LottoRandomContents extends Component {\r\n    render() {\r\n        const lottoNumbers = this.props.lottoNumbers\r\n        return (\r\n            <div className=\"lotto-random-contents\">\r\n                {lottoNumbers.map((lottoNumber, i) =>\r\n                    <LottoBoxComponent\r\n                        key={i}\r\n                        lottoNumber={lottoNumber}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomContents;","import React, { Component } from 'react';\nimport LottoRandomHeader from \"./LottoRandomHeader\";\nimport LottoRandomSideMenu from \"./LottoRandomSideMenu\";\nimport LottoRandomContents from \"./LottoRandomContents\";\nimport \"./LottoRandomStyle.css\";\n\nclass LottoRandomTemplate extends Component {\n\n    state = {\n        allCheck : false,\n        selected : [],\n        lottoNumbers : []\n    }\n\n    componentDidMount() {\n        const {selected} = this.state;\n        for(let i=1; i<46; i++) {\n            selected.push(false);\n        }\n        this.setState({selected});\n    }\n\n    //전체 체크\n    allHandleChange = (checked) => {\n        const {selected} = this.state;\n\n        for(let i=1; i<46; i++) {\n            this.handleChange(checked, i)\n        }\n        this.setState({selected})\n    }\n\n    //숫자 선택 이벤트 발생\n    handleChange = (checked, number) => {\n        console.log(number);\n        const {selected} = this.state;\n        selected[number-1] = checked;\n        this.setState({selected})\n    ;}\n\n\n    Modal = () => {\n        return (\n        <div>\n            몇개?\n        </div>\n        );\n    }\n\n    selectBundle = (flag, numbers) => {\n\n        const {lottoNumbers} = this.state\n\n        for(let i=0; i<(flag + 1) * 5; i++) {\n\n            const lotto = this.selectLotto([], numbers);\n            lottoNumbers.push(lotto);\n            this.setState({lottoNumbers});\n        }\n\n    }\n\n    //Generate 버튼 클릭\n    handleButtonOnClick = () => {\n        const {selected, lottoNumbers} = this.state\n        const numbers = [];\n        let selectedNumberCount = 0;\n\n        selected.forEach((s, i) => {\n            if(s) {\n                selectedNumberCount++;\n                numbers.push(i+1)\n            }\n        })\n\n        if(selectedNumberCount < 7) {\n            alert(\"7개 이상의 번호를 선택해야 합니다.\")\n            return;\n        } else {\n            alert(\"번호를 5개 생성합니다.\")\n            this.selectBundle(0, numbers)\n            // for(let i=0; i<5; i++) {\n            //     const lotto = this.selectLotto([], numbers);\n            //     lottoNumbers.push(lotto);\n            //     this.setState({lottoNumbers});\n            // }\n        }\n    }\n\n    //선택한 번호를 기준으로 생성하는 랜덤 알고리즘\n    selectLotto = (lottoNumber, numbers) => {\n        if(lottoNumber.length === 7) {\n            const temp = lottoNumber.slice(0, 6);\n            temp.sort((a,b)=>a-b);\n            temp.push(lottoNumber[6]);\n            return temp;\n        }\n        let n = numbers[Math.floor(Math.random() * numbers.length)];\n        if(lottoNumber.indexOf(n) < 0) {\n            lottoNumber.push(n);\n        }\n        return this.selectLotto(lottoNumber, numbers);\n    }\n\n\n    render() {\n        return (\n            <div className=\"lotto-random-template\">\n                <LottoRandomHeader />\n                <div className=\"lott-random-main\">\n                    <LottoRandomSideMenu\n                        allCheck={this.allCheck}\n                        selected={this.state.selected}\n                        allHandleChange={this.allHandleChange}\n                        handleChange={this.handleChange}\n                        handleButtonOnClick={this.handleButtonOnClick}\n                    />\n                    <LottoRandomContents\n                        lottoNumbers={this.state.lottoNumbers}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default LottoRandomTemplate;","// /* eslint-disablt */ //문법 warning console에 뜨지 않도록\n\nimport React from \"react\";\nimport './App.css';\nimport LottoRandomTemplate from \"./lotto/LottoRandomTemplate\";\n\nfunction App() {\n\n    return (\n        <div className=\"lotto-random-template\">\n            <LottoRandomTemplate />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}